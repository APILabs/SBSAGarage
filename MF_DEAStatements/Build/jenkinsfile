def Project = ${env.PROJECT_NAME}
pipeline {
    agent any
    stages
     {
        stage('pull from git')
        {
        	steps {
            	checkout([
                       $class: 'GitSCM',
                       branches: [[name: '*/master']],
                       extensions: scm.extensions + [[$class: 'LocalBranch'], [$class: 'WipeWorkspace']],
                       userRemoteConfigs: [[credentialsId: 'githubcredid', url: 'https://github.com/APILabs/SBSAGarage.git']],
                      
               		])
               	}
        }
        stage('Build Ant')
        {
        	steps {
            	withAnt(installation: 'antlocal') 
				{
					sh "ant -buildfile ./${env.PROJECT_NAME}/Build/build.xml"
				}
           	 }
				
        }
	stage('cleanup') 
	{
      	  steps 
	  {
            script 
	    {
              openshift.withCluster('mycluster') 
	      {
                openshift.withProject('ace-sbsa')
		{
                  openshift.selector("all", [ build : 'acetest123' ]).delete() 
                }
              }
            }
          }
        }
	stage("Build Image") 
	{
              steps 
	      {
                dir('MF_DEAStatements') 
		{
                  sh 'cat Build/dockerfile | oc new-build -D - --name acetest123'
                }
              }
          }
	  stage("Start Build") 
	{
              steps 
	      {
                dir('MF_DEAStatements') 
		{
                  sh 'oc start-build acetest123 --from-dir . --follow'
                }
              }
          }
	   stage("Run Build to create ace") 
	{
              steps 
	      {
                dir('MF_DEAStatements') 
		{
                  sh 'oc start-build acetest123 --from-dir . --follow'
                }
              }
          }
    }
}
